{
	"name": "airpollution_Bronze_Preprocessing",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json4ADLSforAirPollutionData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet2airpollution",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select1"
				},
				{
					"name": "flatten2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as double, no as double, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['bronze/bronze_air_pollution_data']) ~> source1",
				"flatten2 derive(corrected_timestamp = iif(length(toString({timestamp})) == 10, toInteger({timestamp}), toInteger(null())),",
				"          location = \"Boston\") ~> derivedColumn1",
				"derivedColumn1 filter(!isNull(corrected_timestamp) && !isNull({list.main.aqi})) ~> filter1",
				"filter1 derive(corrected_timestamp = toTimestamp(toLong(corrected_timestamp) * 1000),",
				"          id = concat(location, '_', toString(corrected_timestamp)),",
				"          co = round({list.components.co}, 2),",
				"          no = round({list.components.no}, 2),",
				"          no2 = round({list.components.no2}, 2),",
				"          o3 = round({list.components.o3}, 2),",
				"          so2 = round({list.components.so2}, 2),",
				"          pm2_5 = round({list.components.pm2_5}, 2),",
				"          pm10 = round({list.components.pm10}, 2),",
				"          nh3 = round({list.components.nh3}, 2),",
				"          lon = -71.0589,",
				"          lat = 42.3601) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          lon,",
				"          lat,",
				"          aqi = {list.main.aqi},",
				"          co,",
				"          no,",
				"          no2,",
				"          o3,",
				"          so2,",
				"          pm2_5,",
				"          pm10,",
				"          nh3,",
				"          corrected_timestamp,",
				"          location,",
				"          id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source1 foldDown(unroll(list),",
				"     mapColumn(",
				"          lon = coord.lon,",
				"          lat = coord.lat,",
				"          aqi = list.main.aqi,",
				"          timestamp = list.dt,",
				"          co = list.components.co,",
				"          no = list.components.no,",
				"          no2 = list.components.no2,",
				"          o3 = list.components.o3,",
				"          so2 = list.components.so2,",
				"          pm2_5 = list.components.pm2_5,",
				"          pm10 = list.components.pm10,",
				"          nh3 = list.components.nh3",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['silver_air_pollution.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}